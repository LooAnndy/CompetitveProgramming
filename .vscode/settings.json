{
    // [[C/C++]]
    "C_Cpp.errorSquiggles": "enabled",
    "C_Cpp.default.intelliSenseMode": "windows-gcc-x64",
    "C_Cpp.intelliSenseEngine": "disabled",
    // clangd
    "clangd.path": "clangd", // 直接使用环境变量
    // Clangd 运行参数(在终端/命令行输入 clangd --help-list-hidden 可查看更多)
    "clangd.arguments": [
        "--background-index",
        "--clang-tidy",
        "--clang-tidy-checks=performance-*, bugprone-*, misc-*, google-*, modernize-*, readability-*, portability-*",
        "--completion-parse=auto",
        "--completion-style=detailed",
        "--function-arg-placeholders=false", //形参不输入
        "--header-insertion=never",
        "--enable-config",
        "--function-arg-placeholders=true",
        "--header-insertion-decorators",
        "--pch-storage=memory",
        "--pretty",
        "--ranking-model=decision_forest",
        "-j=12",
    ],
    // Clangd 找不到编译数据库(例如 compile_flags.json 文件)时采用的设置,缺陷是不能直接索引同一项目的不同文件,只能分析系统头文件、当前文件和include的文件
    "clangd.fallbackFlags": [
        "--std=c++20",
        "--target=x86_64-w64-windows-gnu",
    ],
    "clangd.onConfigChanged": "restart", // 重启 clangd 时重载配置,具体方法: F1 + Fn 打开命令面板，然后搜索“clangd: restart”
    "clangd.serverCompletionRanking": true,
    "cph.general.menuChoices": "cpp python js",
    "cph.language.cpp.Args": "-std=c++20",
    "cph.language.cpp.SubmissionCompiler": "GNU G++17 7.3.0",
    "editor.inlayHints.enabled": "offUnlessPressed",
}